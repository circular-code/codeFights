Given a sequence of integers as an array, determine whether it is possible to obtain a strictly increasing sequence by removing no more than one element from the array.

Example

For sequence = [1, 3, 2, 1], the output should be
almostIncreasingSequence(sequence) = false.

There is no one element in this array that can be removed in order to get a strictly increasing sequence.

For sequence = [1, 3, 2], the output should be
almostIncreasingSequence(sequence) = true.

You can remove 3 from the array to get the strictly increasing sequence [1, 2]. Alternately, you can remove 2 to get the strictly increasing sequence [1, 3].

Input/Output

[execution time limit] 4 seconds (js)

[input] array.integer sequence

Guaranteed constraints:
2 ≤ sequence.length ≤ 105,
-105 ≤ sequence[i] ≤ 105.

[output] boolean

Return true if it is possible to remove one element from the array in order to get a strictly increasing sequence, otherwise return false.

*********** SOLUTION ***********

function almostIncreasingSequence(sequence) {
    
    var deleted = false,
        sequenceLength = sequence.length,
        result = true;
    
    for (var i = 0; i < sequenceLength; i++) {
     
        var current = sequence[i],
            next = sequence[i+1],
            previous = sequence[i-1];
        
        if (( (next === 0 || next) && current >= next) || ((previous === 0 || previous) && current <= previous))
            
            if (deleted)
                return false;
            else {
                deleted = true;
                
                if (next <= previous)
                    sequence.splice(i + 1, 1);
                else
                    sequence.splice(i, 1);
                
                if (i > -1 && current <= previous)
                    return false;
                
                i--;
            }
    }
    
    return result;
}
